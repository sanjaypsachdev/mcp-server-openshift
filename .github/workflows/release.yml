name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  NODE_VERSION: '18'

jobs:
  # Pre-release validation
  validate:
    name: Validate Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run full test suite
        run: npm test

      - name: Build project
        run: npm run build

      - name: Validate package version matches tag
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "❌ Tag version ($TAG_VERSION) doesn't match package.json version ($PACKAGE_VERSION)"
            exit 1
          fi
          echo "✅ Version validation passed: $TAG_VERSION"

  # Build and package
  build:
    name: Build Release Assets
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Create tarball
        run: npm pack

      - name: Create distribution zip
        run: |
          mkdir -p release-assets
          cp -r dist/ release-assets/
          cp package.json package-lock.json manifest.json README.md LICENSE release-assets/
          cd release-assets
          zip -r ../mcp-server-openshift-${GITHUB_REF#refs/tags/v}.zip .
          cd ..
          tar -czf mcp-server-openshift-${GITHUB_REF#refs/tags/v}.tar.gz -C release-assets .

      - name: Generate checksums
        run: |
          sha256sum *.tgz *.zip *.tar.gz > checksums.txt
          cat checksums.txt

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: |
            *.tgz
            *.zip
            *.tar.gz
            checksums.txt

  # Create GitHub release
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-assets

      - name: Generate changelog
        id: changelog
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/}
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          
          echo "## Changes in $TAG_VERSION" > changelog.md
          echo "" >> changelog.md
          
          if [ -n "$PREVIOUS_TAG" ]; then
            echo "### Commits since $PREVIOUS_TAG:" >> changelog.md
            git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD >> changelog.md
          else
            echo "### Initial release" >> changelog.md
            git log --pretty=format:"- %s (%h)" >> changelog.md
          fi
          
          echo "" >> changelog.md
          echo "### Files in this release:" >> changelog.md
          echo "- \`mcp-server-openshift-${TAG_VERSION#v}.tgz\` - npm package" >> changelog.md
          echo "- \`mcp-server-openshift-${TAG_VERSION#v}.zip\` - distribution archive (zip)" >> changelog.md
          echo "- \`mcp-server-openshift-${TAG_VERSION#v}.tar.gz\` - distribution archive (tar.gz)" >> changelog.md
          echo "- \`checksums.txt\` - SHA256 checksums for all files" >> changelog.md
          
          cat changelog.md

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          body_path: changelog.md
          draft: false
          prerelease: false
          files: |
            *.tgz
            *.zip
            *.tar.gz
            checksums.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Publish to npm (optional)
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: release
    if: github.repository == 'your-org/mcp-server-openshift'  # Only publish from main repo
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Notify success
        run: |
          echo "✅ Successfully published ${{ github.ref_name }} to npm!"
          echo "📦 Package: https://www.npmjs.com/package/mcp-server-openshift"
